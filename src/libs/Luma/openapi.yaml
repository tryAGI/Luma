openapi: 3.0.1
info:
  title: Dream Machine API
  description: Generate videos using Dream Machine.
  termsOfService: https://lumalabs.ai/legal/tos
  contact:
    name: 'Luma AI, Inc.'
    url: https://lumalabs.ai
    email: support@lumalabs.ai
  license:
    name: Proprietary
    url: https://lumalabs.ai/legal/tos
  version: '1.1.0'
servers:
  - url: https://api.lumalabs.ai/dream-machine/v1
paths:
  /credits:
    get:
      tags:
        - Credits
      summary: Get credits
      description: Get the credits information for the api user
      operationId: getCredits
      responses:
        '200':
          description: Credits found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credits'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /generations:
    get:
      tags:
        - Generations
      summary: List generations
      description: Retrieve a list of generations with optional filtering and sorting
      operationId: listGenerations
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Generations found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGenerationResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Generations
      summary: Create a generation
      description: Initiate a new generation with the provided prompt
      operationId: createGeneration
      requestBody:
        description: The generation request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerationRequest'
            examples:
              default:
                value:
                  aspect_ratio: '16:9'
                  keyframes:
                    frame0:
                      type: image
                      url: https://example.com/image.jpg
                    frame1:
                      id: 123e4567-e89b-12d3-a456-426614174000
                      type: generation
                  loop: true
                  prompt: A serene lake surrounded by mountains at sunset
        required: true
      responses:
        '201':
          description: Generation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generation'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /generations/camera_motion/list:
    get:
      tags:
        - Generations
      summary: Get camera motions
      description: Get all possible camera motions
      operationId: getCameraMotion
      responses:
        '200':
          description: Camera motion found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/generations/{id}':
    delete:
      tags:
        - Generations
      summary: Delete a generation
      description: Remove a specific generation by its ID
      operationId: deleteGeneration
      parameters:
        - name: id
          in: path
          description: The ID of the generation
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Generation deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Generations
      summary: Get a generation
      description: Retrieve details of a specific generation by its ID
      operationId: getGeneration
      parameters:
        - name: id
          in: path
          description: The ID of the generation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Generation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generation'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ping:
    get:
      tags:
        - Ping
      summary: Ping
      description: Check if the API is running
      operationId: ping
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The message
                example:
                  message: pong
components:
  schemas:
    AspectRatio:
      enum:
        - '1:1'
        - '16:9'
        - '9:16'
        - '4:3'
        - '3:4'
        - '21:9'
        - '9:21'
      type: string
      description: The aspect ratio of the generation
      default: '16:9'
      example: '16:9'
    Assets:
      type: object
      properties:
        video:
          type: string
          description: The URL of the video
          format: uri
      description: The assets of the generation
      example:
        video: https://example.com/video.mp4
    Credits:
      required:
        - credit_balance
      type: object
      properties:
        credit_balance:
          type: number
          description: Available credits balance in USD cents
          format: float
      description: The credits object
    Error:
      type: object
      properties:
        detail:
          type: string
          description: The error message
      description: The error object
      example:
        detail: Invalid API key is provided
    Generation:
      type: object
      properties:
        assets:
          $ref: '#/components/schemas/Assets'
        created_at:
          type: string
          description: The date and time when the generation was created
          format: date-time
        failure_reason:
          type: string
          description: The reason for the state of the generation
        id:
          type: string
          description: The ID of the generation
          format: uuid
        request:
          $ref: '#/components/schemas/GenerationRequest'
        state:
          $ref: '#/components/schemas/State'
        version:
          type: string
          description: The model version used for the generation eg. v1.6
      description: The generation response object
      example:
        assets:
          video: https://example.com/video.mp4
        created_at: '2023-06-01T12:00:00.0000000+00:00'
        failure_reason: 
        id: 123e4567-e89b-12d3-a456-426614174000
        request:
          aspect_ratio: '16:9'
          keyframes:
            frame0:
              type: image
              url: https://example.com/image.jpg
            frame1:
              id: 123e4567-e89b-12d3-a456-426614174000
              type: generation
          loop: true
          prompt: A serene lake surrounded by mountains at sunset
        state: completed
        version: v1.6
    GenerationReference:
      required:
        - type
        - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the generation
          format: uuid
        type:
          enum:
            - generation
          type: string
          default: generation
      description: The generation reference object
      example:
        id: 123e4567-e89b-12d3-a456-426614174000
        type: generation
    GenerationRequest:
      type: object
      properties:
        aspect_ratio:
          $ref: '#/components/schemas/AspectRatio'
        callback_url:
          type: string
          description: 'The callback URL of the generation, a POST request with Generation object will be sent to the callback URL when the generation is dreaming, completed, or failed'
          format: uri
        keyframes:
          $ref: '#/components/schemas/Keyframes'
        loop:
          type: boolean
          description: Whether to loop the video
        prompt:
          type: string
          description: The prompt of the generation
      description: The generation request object
      example:
        summary: Text to video
        value:
          aspect_ratio: '16:9'
          loop: true
          prompt: A serene lake surrounded by mountains at sunset
    ImageReference:
      required:
        - type
        - url
      type: object
      properties:
        type:
          enum:
            - image
          type: string
          default: image
        url:
          type: string
          description: The URL of the image
          format: uri
      description: The image object
      example:
        type: image
        url: https://example.com/image.jpg
    Keyframe:
      oneOf:
        - $ref: '#/components/schemas/GenerationReference'
        - $ref: '#/components/schemas/ImageReference'
      description: 'A keyframe can be either a Generation reference, an Image, or a Video'
      discriminator:
        propertyName: type
        mapping:
          generation: '#/components/schemas/GenerationReference'
          image: '#/components/schemas/ImageReference'
      example:
        summary: Generation reference
        value:
          id: 123e4567-e89b-12d3-a456-426614174000
          type: generation
    Keyframes:
      type: object
      properties:
        frame0:
          $ref: '#/components/schemas/Keyframe'
        frame1:
          $ref: '#/components/schemas/Keyframe'
      description: The keyframes of the generation
      example:
        frame0:
          type: image
          url: https://example.com/image.jpg
        frame1:
          id: 123e4567-e89b-12d3-a456-426614174000
          type: generation
    ListGenerationResponse:
      required:
        - generations
      type: object
      properties:
        count:
          type: integer
          description: The number of generations returned
        generations:
          type: array
          items:
            $ref: '#/components/schemas/Generation'
          description: The generations requested
        has_more:
          type: boolean
          description: Whether there are more generations
        limit:
          type: integer
          description: The limit of the generations requested
        offset:
          type: integer
          description: The offset of the generations requested
      description: The generations response object
      example:
        count: 1
        generations:
          - assets:
              video: https://example.com/video.mp4
            created_at: '2023-06-01T12:00:00.0000000+00:00'
            failure_reason: 
            id: 123e4567-e89b-12d3-a456-426614174000
            request:
              aspect_ratio: '16:9'
              keyframes:
                frame0:
                  type: image
                  url: https://example.com/image.jpg
                frame1:
                  id: 123e4567-e89b-12d3-a456-426614174000
                  type: generation
              loop: true
              prompt: A serene lake surrounded by mountains at sunset
            state: completed
            version: v1.6
        has_more: false
        limit: 100
        offset: 0
    State:
      enum:
        - queued
        - dreaming
        - completed
        - failed
      type: string
      description: The state of the generation
      example: completed
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: [ ]